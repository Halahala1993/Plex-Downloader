plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'com.palantir.git-version' version '0.12.2'
}

sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}
def details = versionDetails()
//Version by commit number.
version = '0.0.1-' + details.lastTag

//Update app version that's visible in the app.
def configFile = new File('plex-downloader-api/src/main/resources/application.properties')
//println "updating version to '${version}' in ${configFile}"
String configContent = configFile.getText('UTF-8')
configContent = configContent.replaceAll(/info\.build\.version=.*/, "info.build.version=${version}")
configFile.write(configContent, 'UTF-8')

println 'Application version: ' + version

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation(
			'junit:junit:4.12',
			'org.junit.jupiter:junit-jupiter-api:5.4.2'
	)
	testRuntime(
			'org.junit.jupiter:junit-jupiter-engine:5.4.2',
			'org.junit.vintage:junit-vintage-engine:5.4.2'
	)
	implementation(project(':plex-downloader-ui')) {
		transitive = true
	}
}

test {
	useJUnitPlatform()
}
